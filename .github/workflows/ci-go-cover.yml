# Copyright 2020-present Montgomery Edwards⁴⁴⁸ (github.com/x448).
# This file is licensed under the MIT License. See LICENSE at https://github.com/x448/workflows for the full text.
#
# CI Go Cover 2020.1.28.
# This GitHub Actions workflow checks if Go (Golang) code coverage satisfies the required minimum.
# The required minimum is specified in the workflow name to keep badge.svg and verified minimum in sync.
#
# To help protect your privacy, this workflow avoids external services.
# This workflow simply runs `go test -short -cover` --> grep --> python.
# The python script is embedded and readable in this file.
# 
# Steps to install and set minimum required coverage:
# 0. Copy this file to github.com/OWNER_NAME/REPO_NAME/.github/workflows/ci-go-cover.yml
# 1. Change workflow name from "cover 100%" to "cover ≥92.5%". Script will automatically use 92.5%.  
# 2. Update README.md to use the new path to badge.svg because the path includes the workflow name.

name: cover 100%

# Remove default permissions.
permissions: {}

on: [push]
jobs:

  # Verify minimum coverage is reached using `go test -short -cover` on latest-ubuntu with default version of Go.
  # The grep expression can't be too strict, it needed to be relaxed to work with different versions of Go.
  cover:
    name: Coverage on ${{matrix.os}}
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Only need one OS
        # Need at least one Go <= 1.16 until *_oldgo.go is removed or changes its build tag
        # Need at least one Go >= 1.17 until build tags require newer version or are removed
        os: [ubuntu-latest]
        go-version: [1.16.x, 1.17.x]

    steps:
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Go Coverage
      run: |
        go version
        go test -short -cover | grep "^.*coverage:.*of statements$" | python -c "import os,re,sys; cover_rpt = sys.stdin.read(); print(cover_rpt) if len(cover_rpt) != 0 and len(cover_rpt.splitlines()) == 1 else sys.exit(1); min_cover = float(re.findall(r'\d*\.\d+|\d+', os.environ['GITHUB_WORKFLOW'])[0]); cover = float(re.findall(r'\d*\.\d+|\d+', cover_rpt)[0]); sys.exit(1) if (cover > 100) or (cover < min_cover) else sys.exit(0)"
      shell: bash
